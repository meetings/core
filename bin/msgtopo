#!/usr/bin/perl

use DateTime;

unless ( scalar( @ARGV ) ) {
  print "usage: msgtopo [file.msg file2.msg ...]\n";
  exit;
}

my $date = DateTime->now;

print '# $Id: msgtopo,v 1.3 2009-01-07 14:42:32 amv Exp $' . "\n\n";
print 'msgid ""' . "\n";
print 'msgstr ""' . "\n";
print '"Project-Id-Version: Dicole\n"' . "\n";
print '"Last-Translator: Teemu Arina <teemu@dicole.com>\n"' . "\n";
print '"POT-Creation-Date: ' . $date->ymd . ' ' . $date->hms . '+0000\n"' . "\n";
print '"PO-Revision-Date: ' . $date->ymd . ' ' . $date->hms . '+0000\n"' . "\n";
print '"Language-Team: Dicole <info@dicole.org>\n"' . "\n";
print '"MIME-Version: 1.0\n"' . "\n";
print '"Content-Type: text/plain; charset=UTF-8\n"' . "\n";
print '"Content-Transfer-Encoding: 8bit\n"' . "\n";
print '"X-Generator: Dicole\n"' . "\n";
print "\n";

my @multi_line = ();

foreach my $file ( @ARGV ) {
  open FILE, "< $file" or die "Cannot open $file: $!\n";
  while ( my $line = <FILE> ) {
    chomp( $line );
    next if $line =~ /^\s*\#/;
    next if $line =~ /^\s*$/;
    $line =~ s/\"/\\\"/g;
    $line =~ s/\[_(\d)\]/\%$1/g;
    if ( @multi_line > 0 && $line =~ /\s*=\s*/ ) {
      my $multi_line = join " ", @multi_line;      
      $multi_line =~ s/\"/\\\"/g;
      print qq[msgstr "$multi_line"\n];
      @multi_line = ();
    } 
    $line =~ s/^\s*//;
    $line =~ s/\s*$//;

    my ( $key, $msg ) = split /\s*=\s*/, $line;
    if ( $key && $msg =~ /\\/ && $line =~ /=/ ) {
      $msg =~ s/\s*\\\s*/ /g;
      push @multi_line, $msg;
      print qq[\nmsgid "$key"\n];          
      next;
    }                    
    elsif ( @multi_line > 0 && $line !~ /=/ ) {
      $line =~ s/\s*\\\s*/ /g;
      push @multi_line, $line;
      next;
    } 
    $line =~ s/\"/\\\"/g;
    print qq[\nmsgid "$key"\n];
    print qq[msgstr "$msg"\n];
  }
  if ( @multi_line > 0 ) {
    my $multi_line = join " ", @multi_line;
    $multi_line =~ s/\"/\\\"/g;
    print qq[msgstr "$multi_line"\n];
  }                                
}
